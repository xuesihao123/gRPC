//新增菜品
//修改菜品
//按条件查询菜品
//删除菜品

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: having.proto

// user 包

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Having struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HavingId         int32   `protobuf:"varint,1,opt,name=having_id,json=havingId,proto3" json:"having_id,omitempty"`
	HavingPrice      float32 `protobuf:"fixed32,2,opt,name=having_price,json=havingPrice,proto3" json:"having_price,omitempty"` //价格
	HavingName       string  `protobuf:"bytes,3,opt,name=having_name,json=havingName,proto3" json:"having_name,omitempty"`      //菜品
	HavingCw         float32 `protobuf:"fixed32,4,opt,name=having_cw,json=havingCw,proto3" json:"having_cw,omitempty"`
	HavingOil        float32 `protobuf:"fixed32,5,opt,name=having_oil,json=havingOil,proto3" json:"having_oil,omitempty"`
	HavingEnergy     float32 `protobuf:"fixed32,6,opt,name=having_energy,json=havingEnergy,proto3" json:"having_energy,omitempty"`
	HavingProtein    float32 `protobuf:"fixed32,7,opt,name=having_protein,json=havingProtein,proto3" json:"having_protein,omitempty"`
	HavingUpdateTime string  `protobuf:"bytes,8,opt,name=having_update_time,json=havingUpdateTime,proto3" json:"having_update_time,omitempty"`
	HavingContent    string  `protobuf:"bytes,9,opt,name=having_content,json=havingContent,proto3" json:"having_content,omitempty"`
}

func (x *Having) Reset() {
	*x = Having{}
	if protoimpl.UnsafeEnabled {
		mi := &file_having_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Having) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Having) ProtoMessage() {}

func (x *Having) ProtoReflect() protoreflect.Message {
	mi := &file_having_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Having.ProtoReflect.Descriptor instead.
func (*Having) Descriptor() ([]byte, []int) {
	return file_having_proto_rawDescGZIP(), []int{0}
}

func (x *Having) GetHavingId() int32 {
	if x != nil {
		return x.HavingId
	}
	return 0
}

func (x *Having) GetHavingPrice() float32 {
	if x != nil {
		return x.HavingPrice
	}
	return 0
}

func (x *Having) GetHavingName() string {
	if x != nil {
		return x.HavingName
	}
	return ""
}

func (x *Having) GetHavingCw() float32 {
	if x != nil {
		return x.HavingCw
	}
	return 0
}

func (x *Having) GetHavingOil() float32 {
	if x != nil {
		return x.HavingOil
	}
	return 0
}

func (x *Having) GetHavingEnergy() float32 {
	if x != nil {
		return x.HavingEnergy
	}
	return 0
}

func (x *Having) GetHavingProtein() float32 {
	if x != nil {
		return x.HavingProtein
	}
	return 0
}

func (x *Having) GetHavingUpdateTime() string {
	if x != nil {
		return x.HavingUpdateTime
	}
	return ""
}

func (x *Having) GetHavingContent() string {
	if x != nil {
		return x.HavingContent
	}
	return ""
}

type FH struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FoodId     int32   `protobuf:"varint,1,opt,name=food_id,json=foodId,proto3" json:"food_id,omitempty"`
	FoodWeight float32 `protobuf:"fixed32,2,opt,name=food_weight,json=foodWeight,proto3" json:"food_weight,omitempty"`
}

func (x *FH) Reset() {
	*x = FH{}
	if protoimpl.UnsafeEnabled {
		mi := &file_having_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FH) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FH) ProtoMessage() {}

func (x *FH) ProtoReflect() protoreflect.Message {
	mi := &file_having_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FH.ProtoReflect.Descriptor instead.
func (*FH) Descriptor() ([]byte, []int) {
	return file_having_proto_rawDescGZIP(), []int{1}
}

func (x *FH) GetFoodId() int32 {
	if x != nil {
		return x.FoodId
	}
	return 0
}

func (x *FH) GetFoodWeight() float32 {
	if x != nil {
		return x.FoodWeight
	}
	return 0
}

//今天需要写完dao层和grpc，后台controller和错误码分类
type CreateHavingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HavingData *Having `protobuf:"bytes,1,opt,name=having_data,json=havingData,proto3" json:"having_data,omitempty"`
	Foods      []*FH   `protobuf:"bytes,2,rep,name=foods,proto3" json:"foods,omitempty"`
}

func (x *CreateHavingRequest) Reset() {
	*x = CreateHavingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_having_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHavingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHavingRequest) ProtoMessage() {}

func (x *CreateHavingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_having_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHavingRequest.ProtoReflect.Descriptor instead.
func (*CreateHavingRequest) Descriptor() ([]byte, []int) {
	return file_having_proto_rawDescGZIP(), []int{2}
}

func (x *CreateHavingRequest) GetHavingData() *Having {
	if x != nil {
		return x.HavingData
	}
	return nil
}

func (x *CreateHavingRequest) GetFoods() []*FH {
	if x != nil {
		return x.Foods
	}
	return nil
}

type CreateHavingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err int32  `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CreateHavingResponse) Reset() {
	*x = CreateHavingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_having_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateHavingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateHavingResponse) ProtoMessage() {}

func (x *CreateHavingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_having_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateHavingResponse.ProtoReflect.Descriptor instead.
func (*CreateHavingResponse) Descriptor() ([]byte, []int) {
	return file_having_proto_rawDescGZIP(), []int{3}
}

func (x *CreateHavingResponse) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *CreateHavingResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DeleteHavingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HavingId int32 `protobuf:"varint,1,opt,name=having_id,json=havingId,proto3" json:"having_id,omitempty"`
}

func (x *DeleteHavingRequest) Reset() {
	*x = DeleteHavingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_having_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHavingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHavingRequest) ProtoMessage() {}

func (x *DeleteHavingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_having_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHavingRequest.ProtoReflect.Descriptor instead.
func (*DeleteHavingRequest) Descriptor() ([]byte, []int) {
	return file_having_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteHavingRequest) GetHavingId() int32 {
	if x != nil {
		return x.HavingId
	}
	return 0
}

type DeleteHavingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err int32  `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeleteHavingResponse) Reset() {
	*x = DeleteHavingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_having_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteHavingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteHavingResponse) ProtoMessage() {}

func (x *DeleteHavingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_having_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteHavingResponse.ProtoReflect.Descriptor instead.
func (*DeleteHavingResponse) Descriptor() ([]byte, []int) {
	return file_having_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteHavingResponse) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *DeleteHavingResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UpdateHavingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Having   []*FH  `protobuf:"bytes,1,rep,name=having,proto3" json:"having,omitempty"`
	Status   string `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	HavingId int32  `protobuf:"varint,3,opt,name=having_id,json=havingId,proto3" json:"having_id,omitempty"`
}

func (x *UpdateHavingRequest) Reset() {
	*x = UpdateHavingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_having_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHavingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHavingRequest) ProtoMessage() {}

func (x *UpdateHavingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_having_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHavingRequest.ProtoReflect.Descriptor instead.
func (*UpdateHavingRequest) Descriptor() ([]byte, []int) {
	return file_having_proto_rawDescGZIP(), []int{6}
}

func (x *UpdateHavingRequest) GetHaving() []*FH {
	if x != nil {
		return x.Having
	}
	return nil
}

func (x *UpdateHavingRequest) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *UpdateHavingRequest) GetHavingId() int32 {
	if x != nil {
		return x.HavingId
	}
	return 0
}

type UpdateHavingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err int32  `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *UpdateHavingResponse) Reset() {
	*x = UpdateHavingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_having_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateHavingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateHavingResponse) ProtoMessage() {}

func (x *UpdateHavingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_having_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateHavingResponse.ProtoReflect.Descriptor instead.
func (*UpdateHavingResponse) Descriptor() ([]byte, []int) {
	return file_having_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateHavingResponse) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *UpdateHavingResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetHavingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit  int32   `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` //每页多少
	Page   int32   `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`   //页数
	Having *Having `protobuf:"bytes,1,opt,name=having,proto3" json:"having,omitempty"`
}

func (x *GetHavingRequest) Reset() {
	*x = GetHavingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_having_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHavingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHavingRequest) ProtoMessage() {}

func (x *GetHavingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_having_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHavingRequest.ProtoReflect.Descriptor instead.
func (*GetHavingRequest) Descriptor() ([]byte, []int) {
	return file_having_proto_rawDescGZIP(), []int{8}
}

func (x *GetHavingRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetHavingRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetHavingRequest) GetHaving() *Having {
	if x != nil {
		return x.Having
	}
	return nil
}

type GetHavingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err        int32     `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg        string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	HavingData []*Having `protobuf:"bytes,3,rep,name=having_data,json=havingData,proto3" json:"having_data,omitempty"`
}

func (x *GetHavingResponse) Reset() {
	*x = GetHavingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_having_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHavingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHavingResponse) ProtoMessage() {}

func (x *GetHavingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_having_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHavingResponse.ProtoReflect.Descriptor instead.
func (*GetHavingResponse) Descriptor() ([]byte, []int) {
	return file_having_proto_rawDescGZIP(), []int{9}
}

func (x *GetHavingResponse) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *GetHavingResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetHavingResponse) GetHavingData() []*Having {
	if x != nil {
		return x.HavingData
	}
	return nil
}

type GetOrderHavingRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrderId int32 `protobuf:"varint,1,opt,name=order_id,json=orderId,proto3" json:"order_id,omitempty"`
}

func (x *GetOrderHavingRequest) Reset() {
	*x = GetOrderHavingRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_having_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderHavingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderHavingRequest) ProtoMessage() {}

func (x *GetOrderHavingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_having_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderHavingRequest.ProtoReflect.Descriptor instead.
func (*GetOrderHavingRequest) Descriptor() ([]byte, []int) {
	return file_having_proto_rawDescGZIP(), []int{10}
}

func (x *GetOrderHavingRequest) GetOrderId() int32 {
	if x != nil {
		return x.OrderId
	}
	return 0
}

type GetOrderHavingResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err        int32     `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg        string    `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	HavingData []*Having `protobuf:"bytes,3,rep,name=having_data,json=havingData,proto3" json:"having_data,omitempty"`
}

func (x *GetOrderHavingResponse) Reset() {
	*x = GetOrderHavingResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_having_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetOrderHavingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOrderHavingResponse) ProtoMessage() {}

func (x *GetOrderHavingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_having_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOrderHavingResponse.ProtoReflect.Descriptor instead.
func (*GetOrderHavingResponse) Descriptor() ([]byte, []int) {
	return file_having_proto_rawDescGZIP(), []int{11}
}

func (x *GetOrderHavingResponse) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *GetOrderHavingResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetOrderHavingResponse) GetHavingData() []*Having {
	if x != nil {
		return x.HavingData
	}
	return nil
}

var File_having_proto protoreflect.FileDescriptor

var file_having_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04,
	0x75, 0x73, 0x65, 0x72, 0x22, 0xc6, 0x02, 0x0a, 0x06, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x12,
	0x1b, 0x0a, 0x09, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0b, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x69, 0x63, 0x65, 0x12,
	0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x77, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x08, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x77, 0x12, 0x1d, 0x0a,
	0x0a, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x09, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4f, 0x69, 0x6c, 0x12, 0x23, 0x0a, 0x0d,
	0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x65, 0x72, 0x67, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0c, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x65, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x68, 0x61, 0x76, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x68, 0x61, 0x76, 0x69,
	0x6e, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x3e, 0x0a,
	0x02, 0x46, 0x48, 0x12, 0x17, 0x0a, 0x07, 0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x66, 0x6f, 0x6f, 0x64, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b,
	0x66, 0x6f, 0x6f, 0x64, 0x5f, 0x77, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x64, 0x57, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x64, 0x0a,
	0x13, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2d, 0x0a, 0x0b, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x05, 0x66, 0x6f, 0x6f, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x48, 0x52, 0x05, 0x66, 0x6f,
	0x6f, 0x64, 0x73, 0x22, 0x3a, 0x0a, 0x14, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x76,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x32, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x61, 0x76, 0x69, 0x6e,
	0x67, 0x49, 0x64, 0x22, 0x3a, 0x0a, 0x14, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x76,
	0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x6c, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x06, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x46, 0x48,
	0x52, 0x06, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x22, 0x3a, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x62, 0x0a, 0x10, 0x47, 0x65, 0x74,
	0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x06, 0x68, 0x61, 0x76, 0x69, 0x6e,
	0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x48,
	0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x22, 0x66, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x65, 0x72, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x0b, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x68, 0x61, 0x76, 0x69, 0x6e,
	0x67, 0x44, 0x61, 0x74, 0x61, 0x22, 0x32, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x16, 0x47, 0x65, 0x74,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2d, 0x0a, 0x0b, 0x68, 0x61, 0x76, 0x69, 0x6e,
	0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x0a, 0x68, 0x61, 0x76, 0x69,
	0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x32, 0xf2, 0x02, 0x0a, 0x06, 0x68, 0x61, 0x76, 0x69, 0x6e,
	0x67, 0x12, 0x47, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x76, 0x69, 0x6e,
	0x67, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48,
	0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0c, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x76,
	0x69, 0x6e, 0x67, 0x12, 0x19, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x48, 0x61, 0x76, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3e, 0x0a, 0x09,
	0x47, 0x65, 0x74, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x16, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x76, 0x69,
	0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0e,
	0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x12, 0x1b,
	0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61,
	0x76, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x48, 0x61, 0x76, 0x69, 0x6e,
	0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a, 0x64,
	0x72, 0x69, 0x6e, 0x6b, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_having_proto_rawDescOnce sync.Once
	file_having_proto_rawDescData = file_having_proto_rawDesc
)

func file_having_proto_rawDescGZIP() []byte {
	file_having_proto_rawDescOnce.Do(func() {
		file_having_proto_rawDescData = protoimpl.X.CompressGZIP(file_having_proto_rawDescData)
	})
	return file_having_proto_rawDescData
}

var file_having_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_having_proto_goTypes = []interface{}{
	(*Having)(nil),                 // 0: user.Having
	(*FH)(nil),                     // 1: user.FH
	(*CreateHavingRequest)(nil),    // 2: user.CreateHavingRequest
	(*CreateHavingResponse)(nil),   // 3: user.CreateHavingResponse
	(*DeleteHavingRequest)(nil),    // 4: user.DeleteHavingRequest
	(*DeleteHavingResponse)(nil),   // 5: user.DeleteHavingResponse
	(*UpdateHavingRequest)(nil),    // 6: user.UpdateHavingRequest
	(*UpdateHavingResponse)(nil),   // 7: user.UpdateHavingResponse
	(*GetHavingRequest)(nil),       // 8: user.GetHavingRequest
	(*GetHavingResponse)(nil),      // 9: user.GetHavingResponse
	(*GetOrderHavingRequest)(nil),  // 10: user.GetOrderHavingRequest
	(*GetOrderHavingResponse)(nil), // 11: user.GetOrderHavingResponse
}
var file_having_proto_depIdxs = []int32{
	0,  // 0: user.CreateHavingRequest.having_data:type_name -> user.Having
	1,  // 1: user.CreateHavingRequest.foods:type_name -> user.FH
	1,  // 2: user.UpdateHavingRequest.having:type_name -> user.FH
	0,  // 3: user.GetHavingRequest.having:type_name -> user.Having
	0,  // 4: user.GetHavingResponse.having_data:type_name -> user.Having
	0,  // 5: user.GetOrderHavingResponse.having_data:type_name -> user.Having
	2,  // 6: user.having.CreateHaving:input_type -> user.CreateHavingRequest
	4,  // 7: user.having.DeleteHaving:input_type -> user.DeleteHavingRequest
	6,  // 8: user.having.UpdateHaving:input_type -> user.UpdateHavingRequest
	8,  // 9: user.having.GetHaving:input_type -> user.GetHavingRequest
	10, // 10: user.having.GetOrderHaving:input_type -> user.GetOrderHavingRequest
	3,  // 11: user.having.CreateHaving:output_type -> user.CreateHavingResponse
	5,  // 12: user.having.DeleteHaving:output_type -> user.DeleteHavingResponse
	7,  // 13: user.having.UpdateHaving:output_type -> user.UpdateHavingResponse
	9,  // 14: user.having.GetHaving:output_type -> user.GetHavingResponse
	11, // 15: user.having.GetOrderHaving:output_type -> user.GetOrderHavingResponse
	11, // [11:16] is the sub-list for method output_type
	6,  // [6:11] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_having_proto_init() }
func file_having_proto_init() {
	if File_having_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_having_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Having); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_having_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FH); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_having_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHavingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_having_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateHavingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_having_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHavingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_having_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteHavingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_having_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHavingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_having_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateHavingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_having_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHavingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_having_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHavingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_having_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderHavingRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_having_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetOrderHavingResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_having_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_having_proto_goTypes,
		DependencyIndexes: file_having_proto_depIdxs,
		MessageInfos:      file_having_proto_msgTypes,
	}.Build()
	File_having_proto = out.File
	file_having_proto_rawDesc = nil
	file_having_proto_goTypes = nil
	file_having_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// HavingClient is the client API for Having service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type HavingClient interface {
	CreateHaving(ctx context.Context, in *CreateHavingRequest, opts ...grpc.CallOption) (*CreateHavingResponse, error)
	DeleteHaving(ctx context.Context, in *DeleteHavingRequest, opts ...grpc.CallOption) (*DeleteHavingResponse, error)
	UpdateHaving(ctx context.Context, in *UpdateHavingRequest, opts ...grpc.CallOption) (*UpdateHavingResponse, error)
	GetHaving(ctx context.Context, in *GetHavingRequest, opts ...grpc.CallOption) (*GetHavingResponse, error)
	GetOrderHaving(ctx context.Context, in *GetOrderHavingRequest, opts ...grpc.CallOption) (*GetOrderHavingResponse, error)
}

type havingClient struct {
	cc grpc.ClientConnInterface
}

func NewHavingClient(cc grpc.ClientConnInterface) HavingClient {
	return &havingClient{cc}
}

func (c *havingClient) CreateHaving(ctx context.Context, in *CreateHavingRequest, opts ...grpc.CallOption) (*CreateHavingResponse, error) {
	out := new(CreateHavingResponse)
	err := c.cc.Invoke(ctx, "/user.having/CreateHaving", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *havingClient) DeleteHaving(ctx context.Context, in *DeleteHavingRequest, opts ...grpc.CallOption) (*DeleteHavingResponse, error) {
	out := new(DeleteHavingResponse)
	err := c.cc.Invoke(ctx, "/user.having/DeleteHaving", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *havingClient) UpdateHaving(ctx context.Context, in *UpdateHavingRequest, opts ...grpc.CallOption) (*UpdateHavingResponse, error) {
	out := new(UpdateHavingResponse)
	err := c.cc.Invoke(ctx, "/user.having/UpdateHaving", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *havingClient) GetHaving(ctx context.Context, in *GetHavingRequest, opts ...grpc.CallOption) (*GetHavingResponse, error) {
	out := new(GetHavingResponse)
	err := c.cc.Invoke(ctx, "/user.having/GetHaving", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *havingClient) GetOrderHaving(ctx context.Context, in *GetOrderHavingRequest, opts ...grpc.CallOption) (*GetOrderHavingResponse, error) {
	out := new(GetOrderHavingResponse)
	err := c.cc.Invoke(ctx, "/user.having/GetOrderHaving", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// HavingServer is the server API for Having service.
type HavingServer interface {
	CreateHaving(context.Context, *CreateHavingRequest) (*CreateHavingResponse, error)
	DeleteHaving(context.Context, *DeleteHavingRequest) (*DeleteHavingResponse, error)
	UpdateHaving(context.Context, *UpdateHavingRequest) (*UpdateHavingResponse, error)
	GetHaving(context.Context, *GetHavingRequest) (*GetHavingResponse, error)
	GetOrderHaving(context.Context, *GetOrderHavingRequest) (*GetOrderHavingResponse, error)
}

// UnimplementedHavingServer can be embedded to have forward compatible implementations.
type UnimplementedHavingServer struct {
}

func (*UnimplementedHavingServer) CreateHaving(context.Context, *CreateHavingRequest) (*CreateHavingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateHaving not implemented")
}
func (*UnimplementedHavingServer) DeleteHaving(context.Context, *DeleteHavingRequest) (*DeleteHavingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteHaving not implemented")
}
func (*UnimplementedHavingServer) UpdateHaving(context.Context, *UpdateHavingRequest) (*UpdateHavingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateHaving not implemented")
}
func (*UnimplementedHavingServer) GetHaving(context.Context, *GetHavingRequest) (*GetHavingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHaving not implemented")
}
func (*UnimplementedHavingServer) GetOrderHaving(context.Context, *GetOrderHavingRequest) (*GetOrderHavingResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetOrderHaving not implemented")
}

func RegisterHavingServer(s *grpc.Server, srv HavingServer) {
	s.RegisterService(&_Having_serviceDesc, srv)
}

func _Having_CreateHaving_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateHavingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HavingServer).CreateHaving(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.having/CreateHaving",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HavingServer).CreateHaving(ctx, req.(*CreateHavingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Having_DeleteHaving_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteHavingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HavingServer).DeleteHaving(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.having/DeleteHaving",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HavingServer).DeleteHaving(ctx, req.(*DeleteHavingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Having_UpdateHaving_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateHavingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HavingServer).UpdateHaving(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.having/UpdateHaving",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HavingServer).UpdateHaving(ctx, req.(*UpdateHavingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Having_GetHaving_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHavingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HavingServer).GetHaving(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.having/GetHaving",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HavingServer).GetHaving(ctx, req.(*GetHavingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Having_GetOrderHaving_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetOrderHavingRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(HavingServer).GetOrderHaving(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.having/GetOrderHaving",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(HavingServer).GetOrderHaving(ctx, req.(*GetOrderHavingRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Having_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.having",
	HandlerType: (*HavingServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateHaving",
			Handler:    _Having_CreateHaving_Handler,
		},
		{
			MethodName: "DeleteHaving",
			Handler:    _Having_DeleteHaving_Handler,
		},
		{
			MethodName: "UpdateHaving",
			Handler:    _Having_UpdateHaving_Handler,
		},
		{
			MethodName: "GetHaving",
			Handler:    _Having_GetHaving_Handler,
		},
		{
			MethodName: "GetOrderHaving",
			Handler:    _Having_GetOrderHaving_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "having.proto",
}
