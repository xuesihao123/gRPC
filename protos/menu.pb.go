//创建菜单
//查询所有菜品
//按照日期查询菜单
//修改菜单

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.0
// 	protoc        v3.20.0
// source: menu.proto

// user 包

package protos

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateOftenMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HavingIds []int32 `protobuf:"varint,1,rep,packed,name=having_ids,json=havingIds,proto3" json:"having_ids,omitempty"`
}

func (x *CreateOftenMenuRequest) Reset() {
	*x = CreateOftenMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOftenMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOftenMenuRequest) ProtoMessage() {}

func (x *CreateOftenMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOftenMenuRequest.ProtoReflect.Descriptor instead.
func (*CreateOftenMenuRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{0}
}

func (x *CreateOftenMenuRequest) GetHavingIds() []int32 {
	if x != nil {
		return x.HavingIds
	}
	return nil
}

type CreateOftenMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err int32  `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CreateOftenMenuResponse) Reset() {
	*x = CreateOftenMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOftenMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOftenMenuResponse) ProtoMessage() {}

func (x *CreateOftenMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOftenMenuResponse.ProtoReflect.Descriptor instead.
func (*CreateOftenMenuResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{1}
}

func (x *CreateOftenMenuResponse) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *CreateOftenMenuResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CreateMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HavingIds []int32 `protobuf:"varint,1,rep,packed,name=having_ids,json=havingIds,proto3" json:"having_ids,omitempty"`
}

func (x *CreateMenuRequest) Reset() {
	*x = CreateMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuRequest) ProtoMessage() {}

func (x *CreateMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuRequest.ProtoReflect.Descriptor instead.
func (*CreateMenuRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{2}
}

func (x *CreateMenuRequest) GetHavingIds() []int32 {
	if x != nil {
		return x.HavingIds
	}
	return nil
}

type CreateMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err int32  `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *CreateMenuResponse) Reset() {
	*x = CreateMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateMenuResponse) ProtoMessage() {}

func (x *CreateMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateMenuResponse.ProtoReflect.Descriptor instead.
func (*CreateMenuResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{3}
}

func (x *CreateMenuResponse) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *CreateMenuResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DeleteMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HavingIds []int32 `protobuf:"varint,1,rep,packed,name=having_ids,json=havingIds,proto3" json:"having_ids,omitempty"`
	MenuId    int32   `protobuf:"varint,2,opt,name=menu_id,json=menuId,proto3" json:"menu_id,omitempty"`
}

func (x *DeleteMenuRequest) Reset() {
	*x = DeleteMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuRequest) ProtoMessage() {}

func (x *DeleteMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuRequest.ProtoReflect.Descriptor instead.
func (*DeleteMenuRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteMenuRequest) GetHavingIds() []int32 {
	if x != nil {
		return x.HavingIds
	}
	return nil
}

func (x *DeleteMenuRequest) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

type DeleteMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err int32  `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeleteMenuResponse) Reset() {
	*x = DeleteMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuResponse) ProtoMessage() {}

func (x *DeleteMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuResponse.ProtoReflect.Descriptor instead.
func (*DeleteMenuResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteMenuResponse) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *DeleteMenuResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type DeleteOftenMenuRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HavingIds []int32 `protobuf:"varint,1,rep,packed,name=having_ids,json=havingIds,proto3" json:"having_ids,omitempty"`
}

func (x *DeleteOftenMenuRequest) Reset() {
	*x = DeleteOftenMenuRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOftenMenuRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOftenMenuRequest) ProtoMessage() {}

func (x *DeleteOftenMenuRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOftenMenuRequest.ProtoReflect.Descriptor instead.
func (*DeleteOftenMenuRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{6}
}

func (x *DeleteOftenMenuRequest) GetHavingIds() []int32 {
	if x != nil {
		return x.HavingIds
	}
	return nil
}

type DeleteOftenMenuResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err int32  `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeleteOftenMenuResponse) Reset() {
	*x = DeleteOftenMenuResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteOftenMenuResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteOftenMenuResponse) ProtoMessage() {}

func (x *DeleteOftenMenuResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteOftenMenuResponse.ProtoReflect.Descriptor instead.
func (*DeleteOftenMenuResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteOftenMenuResponse) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *DeleteOftenMenuResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type HavingS struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HavingId         int32   `protobuf:"varint,1,opt,name=having_id,json=havingId,proto3" json:"having_id,omitempty"`
	HavingPrice      float32 `protobuf:"fixed32,2,opt,name=having_price,json=havingPrice,proto3" json:"having_price,omitempty"`
	HavingName       string  `protobuf:"bytes,3,opt,name=having_name,json=havingName,proto3" json:"having_name,omitempty"`
	HavingCw         float32 `protobuf:"fixed32,4,opt,name=having_cw,json=havingCw,proto3" json:"having_cw,omitempty"`
	HavingOil        float32 `protobuf:"fixed32,5,opt,name=having_oil,json=havingOil,proto3" json:"having_oil,omitempty"`
	HavingEnergy     float32 `protobuf:"fixed32,6,opt,name=having_energy,json=havingEnergy,proto3" json:"having_energy,omitempty"`
	HavingProtein    float32 `protobuf:"fixed32,7,opt,name=having_protein,json=havingProtein,proto3" json:"having_protein,omitempty"`
	HavingUpdateTime string  `protobuf:"bytes,8,opt,name=having_update_time,json=havingUpdateTime,proto3" json:"having_update_time,omitempty"`
	HavingContent    string  `protobuf:"bytes,9,opt,name=having_content,json=havingContent,proto3" json:"having_content,omitempty"`
}

func (x *HavingS) Reset() {
	*x = HavingS{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HavingS) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HavingS) ProtoMessage() {}

func (x *HavingS) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HavingS.ProtoReflect.Descriptor instead.
func (*HavingS) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{8}
}

func (x *HavingS) GetHavingId() int32 {
	if x != nil {
		return x.HavingId
	}
	return 0
}

func (x *HavingS) GetHavingPrice() float32 {
	if x != nil {
		return x.HavingPrice
	}
	return 0
}

func (x *HavingS) GetHavingName() string {
	if x != nil {
		return x.HavingName
	}
	return ""
}

func (x *HavingS) GetHavingCw() float32 {
	if x != nil {
		return x.HavingCw
	}
	return 0
}

func (x *HavingS) GetHavingOil() float32 {
	if x != nil {
		return x.HavingOil
	}
	return 0
}

func (x *HavingS) GetHavingEnergy() float32 {
	if x != nil {
		return x.HavingEnergy
	}
	return 0
}

func (x *HavingS) GetHavingProtein() float32 {
	if x != nil {
		return x.HavingProtein
	}
	return 0
}

func (x *HavingS) GetHavingUpdateTime() string {
	if x != nil {
		return x.HavingUpdateTime
	}
	return ""
}

func (x *HavingS) GetHavingContent() string {
	if x != nil {
		return x.HavingContent
	}
	return ""
}

type GetHavingFindRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit int32 `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"` //每页多少
	Page  int32 `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`   //页数
}

func (x *GetHavingFindRequest) Reset() {
	*x = GetHavingFindRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHavingFindRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHavingFindRequest) ProtoMessage() {}

func (x *GetHavingFindRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHavingFindRequest.ProtoReflect.Descriptor instead.
func (*GetHavingFindRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{9}
}

func (x *GetHavingFindRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetHavingFindRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetHavingFindResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err        int32      `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg        string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	HavingData []*HavingS `protobuf:"bytes,3,rep,name=having_data,json=havingData,proto3" json:"having_data,omitempty"`
}

func (x *GetHavingFindResponse) Reset() {
	*x = GetHavingFindResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetHavingFindResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetHavingFindResponse) ProtoMessage() {}

func (x *GetHavingFindResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetHavingFindResponse.ProtoReflect.Descriptor instead.
func (*GetHavingFindResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{10}
}

func (x *GetHavingFindResponse) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *GetHavingFindResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetHavingFindResponse) GetHavingData() []*HavingS {
	if x != nil {
		return x.HavingData
	}
	return nil
}

type GetMenuDateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateDate string `protobuf:"bytes,1,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
	Limit      int32  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"` //每页多少
	Page       int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`   //页数
}

func (x *GetMenuDateRequest) Reset() {
	*x = GetMenuDateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenuDateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuDateRequest) ProtoMessage() {}

func (x *GetMenuDateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuDateRequest.ProtoReflect.Descriptor instead.
func (*GetMenuDateRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{11}
}

func (x *GetMenuDateRequest) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *GetMenuDateRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetMenuDateRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

type GetMenuDateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err        int32      `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg        string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	HavingData []*HavingS `protobuf:"bytes,3,rep,name=having_data,json=havingData,proto3" json:"having_data,omitempty"`
}

func (x *GetMenuDateResponse) Reset() {
	*x = GetMenuDateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMenuDateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMenuDateResponse) ProtoMessage() {}

func (x *GetMenuDateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMenuDateResponse.ProtoReflect.Descriptor instead.
func (*GetMenuDateResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{12}
}

func (x *GetMenuDateResponse) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *GetMenuDateResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMenuDateResponse) GetHavingData() []*HavingS {
	if x != nil {
		return x.HavingData
	}
	return nil
}

type DeleteMenuTodayRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreateDate string  `protobuf:"bytes,1,opt,name=create_date,json=createDate,proto3" json:"create_date,omitempty"`
	HavingIds  []int32 `protobuf:"varint,2,rep,packed,name=having_ids,json=havingIds,proto3" json:"having_ids,omitempty"`
}

func (x *DeleteMenuTodayRequest) Reset() {
	*x = DeleteMenuTodayRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenuTodayRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuTodayRequest) ProtoMessage() {}

func (x *DeleteMenuTodayRequest) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuTodayRequest.ProtoReflect.Descriptor instead.
func (*DeleteMenuTodayRequest) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteMenuTodayRequest) GetCreateDate() string {
	if x != nil {
		return x.CreateDate
	}
	return ""
}

func (x *DeleteMenuTodayRequest) GetHavingIds() []int32 {
	if x != nil {
		return x.HavingIds
	}
	return nil
}

type DeleteMenuTodayResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err int32  `protobuf:"varint,1,opt,name=err,proto3" json:"err,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeleteMenuTodayResponse) Reset() {
	*x = DeleteMenuTodayResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_menu_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteMenuTodayResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteMenuTodayResponse) ProtoMessage() {}

func (x *DeleteMenuTodayResponse) ProtoReflect() protoreflect.Message {
	mi := &file_menu_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteMenuTodayResponse.ProtoReflect.Descriptor instead.
func (*DeleteMenuTodayResponse) Descriptor() ([]byte, []int) {
	return file_menu_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteMenuTodayResponse) GetErr() int32 {
	if x != nil {
		return x.Err
	}
	return 0
}

func (x *DeleteMenuTodayResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_menu_proto protoreflect.FileDescriptor

var file_menu_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x75, 0x73,
	0x65, 0x72, 0x22, 0x37, 0x0a, 0x16, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x74, 0x65,
	0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x09, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x22, 0x3d, 0x0a, 0x17, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x74, 0x65, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x32, 0x0a, 0x11, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x09, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x22, 0x38,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x4b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x05, 0x52, 0x09, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x12, 0x17, 0x0a, 0x07,
	0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d,
	0x65, 0x6e, 0x75, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65,
	0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22,
	0x37, 0x0a, 0x16, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x66, 0x74, 0x65, 0x6e, 0x4d, 0x65,
	0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x76,
	0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x68,
	0x61, 0x76, 0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x22, 0x3d, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x4f, 0x66, 0x74, 0x65, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0xc7, 0x02, 0x0a, 0x07, 0x48, 0x61, 0x76, 0x69,
	0x6e, 0x67, 0x53, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x49, 0x64,
	0x12, 0x21, 0x0a, 0x0c, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x70, 0x72, 0x69, 0x63, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0b, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x50, 0x72,
	0x69, 0x63, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x63,
	0x77, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x08, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x43,
	0x77, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x69, 0x6c, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x09, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x4f, 0x69, 0x6c,
	0x12, 0x23, 0x0a, 0x0d, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x65, 0x72, 0x67,
	0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x45,
	0x6e, 0x65, 0x72, 0x67, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0d, 0x68,
	0x61, 0x76, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x74, 0x65, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x12,
	0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69,
	0x6d, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x68, 0x61,
	0x76, 0x69, 0x6e, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x22, 0x40, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x46, 0x69,
	0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70,
	0x61, 0x67, 0x65, 0x22, 0x6b, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67,
	0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x10,
	0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x2e, 0x0a, 0x0b, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x48, 0x61, 0x76,
	0x69, 0x6e, 0x67, 0x53, 0x52, 0x0a, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61,
	0x22, 0x5f, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x22, 0x69, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73,
	0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2e, 0x0a, 0x0b,
	0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x53,
	0x52, 0x0a, 0x68, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x44, 0x61, 0x74, 0x61, 0x22, 0x58, 0x0a, 0x16,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x68, 0x61, 0x76, 0x69, 0x6e,
	0x67, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x05, 0x52, 0x09, 0x68, 0x61, 0x76,
	0x69, 0x6e, 0x67, 0x49, 0x64, 0x73, 0x22, 0x3d, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4d, 0x65, 0x6e, 0x75, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x32, 0x94, 0x04, 0x0a, 0x04, 0x6d, 0x65, 0x6e, 0x75, 0x12, 0x41,
	0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x17, 0x2e, 0x75,
	0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x50, 0x0a, 0x0f, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x66, 0x74, 0x65, 0x6e,
	0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x4f, 0x66, 0x74, 0x65, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x4f, 0x66, 0x74, 0x65, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x41, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e,
	0x75, 0x12, 0x17, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18, 0x2e, 0x75, 0x73, 0x65,
	0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x4f, 0x66, 0x74, 0x65, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1c, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x66, 0x74, 0x65, 0x6e, 0x4d, 0x65, 0x6e, 0x75,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x4f, 0x66, 0x74, 0x65, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x4a, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x48,
	0x61, 0x76, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x12, 0x1a, 0x2e, 0x75, 0x73, 0x65, 0x72,
	0x2e, 0x47, 0x65, 0x74, 0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74,
	0x48, 0x61, 0x76, 0x69, 0x6e, 0x67, 0x46, 0x69, 0x6e, 0x64, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x44, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x44,
	0x61, 0x74, 0x65, 0x12, 0x18, 0x2e, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65,
	0x6e, 0x75, 0x44, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x50, 0x0a, 0x0f, 0x44, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x6f, 0x64, 0x61, 0x79, 0x12, 0x1c, 0x2e,
	0x75, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x54,
	0x6f, 0x64, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1d, 0x2e, 0x75, 0x73,
	0x65, 0x72, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x6f, 0x64,
	0x61, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x0c, 0x5a, 0x0a,
	0x64, 0x72, 0x69, 0x6e, 0x6b, 0x2f, 0x6d, 0x65, 0x6e, 0x75, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_menu_proto_rawDescOnce sync.Once
	file_menu_proto_rawDescData = file_menu_proto_rawDesc
)

func file_menu_proto_rawDescGZIP() []byte {
	file_menu_proto_rawDescOnce.Do(func() {
		file_menu_proto_rawDescData = protoimpl.X.CompressGZIP(file_menu_proto_rawDescData)
	})
	return file_menu_proto_rawDescData
}

var file_menu_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_menu_proto_goTypes = []interface{}{
	(*CreateOftenMenuRequest)(nil),  // 0: user.CreateOftenMenuRequest
	(*CreateOftenMenuResponse)(nil), // 1: user.CreateOftenMenuResponse
	(*CreateMenuRequest)(nil),       // 2: user.CreateMenuRequest
	(*CreateMenuResponse)(nil),      // 3: user.CreateMenuResponse
	(*DeleteMenuRequest)(nil),       // 4: user.DeleteMenuRequest
	(*DeleteMenuResponse)(nil),      // 5: user.DeleteMenuResponse
	(*DeleteOftenMenuRequest)(nil),  // 6: user.DeleteOftenMenuRequest
	(*DeleteOftenMenuResponse)(nil), // 7: user.DeleteOftenMenuResponse
	(*HavingS)(nil),                 // 8: user.HavingS
	(*GetHavingFindRequest)(nil),    // 9: user.GetHavingFindRequest
	(*GetHavingFindResponse)(nil),   // 10: user.GetHavingFindResponse
	(*GetMenuDateRequest)(nil),      // 11: user.GetMenuDateRequest
	(*GetMenuDateResponse)(nil),     // 12: user.GetMenuDateResponse
	(*DeleteMenuTodayRequest)(nil),  // 13: user.DeleteMenuTodayRequest
	(*DeleteMenuTodayResponse)(nil), // 14: user.DeleteMenuTodayResponse
}
var file_menu_proto_depIdxs = []int32{
	8,  // 0: user.GetHavingFindResponse.having_data:type_name -> user.HavingS
	8,  // 1: user.GetMenuDateResponse.having_data:type_name -> user.HavingS
	2,  // 2: user.menu.CreateMenu:input_type -> user.CreateMenuRequest
	0,  // 3: user.menu.CreateOftenMenu:input_type -> user.CreateOftenMenuRequest
	4,  // 4: user.menu.DeleteMenu:input_type -> user.DeleteMenuRequest
	6,  // 5: user.menu.DeleteOftenMenu:input_type -> user.DeleteOftenMenuRequest
	9,  // 6: user.menu.GetHavingFind:input_type -> user.GetHavingFindRequest
	11, // 7: user.menu.GetMenuDate:input_type -> user.GetMenuDateRequest
	13, // 8: user.menu.DeleteMenuToday:input_type -> user.DeleteMenuTodayRequest
	3,  // 9: user.menu.CreateMenu:output_type -> user.CreateMenuResponse
	1,  // 10: user.menu.CreateOftenMenu:output_type -> user.CreateOftenMenuResponse
	5,  // 11: user.menu.DeleteMenu:output_type -> user.DeleteMenuResponse
	7,  // 12: user.menu.DeleteOftenMenu:output_type -> user.DeleteOftenMenuResponse
	10, // 13: user.menu.GetHavingFind:output_type -> user.GetHavingFindResponse
	12, // 14: user.menu.GetMenuDate:output_type -> user.GetMenuDateResponse
	14, // 15: user.menu.DeleteMenuToday:output_type -> user.DeleteMenuTodayResponse
	9,  // [9:16] is the sub-list for method output_type
	2,  // [2:9] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_menu_proto_init() }
func file_menu_proto_init() {
	if File_menu_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_menu_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOftenMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateOftenMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOftenMenuRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteOftenMenuResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HavingS); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHavingFindRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetHavingFindResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenuDateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMenuDateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMenuTodayRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_menu_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteMenuTodayResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_menu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_menu_proto_goTypes,
		DependencyIndexes: file_menu_proto_depIdxs,
		MessageInfos:      file_menu_proto_msgTypes,
	}.Build()
	File_menu_proto = out.File
	file_menu_proto_rawDesc = nil
	file_menu_proto_goTypes = nil
	file_menu_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// MenuClient is the client API for Menu service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type MenuClient interface {
	CreateMenu(ctx context.Context, in *CreateMenuRequest, opts ...grpc.CallOption) (*CreateMenuResponse, error)
	CreateOftenMenu(ctx context.Context, in *CreateOftenMenuRequest, opts ...grpc.CallOption) (*CreateOftenMenuResponse, error)
	DeleteMenu(ctx context.Context, in *DeleteMenuRequest, opts ...grpc.CallOption) (*DeleteMenuResponse, error)
	DeleteOftenMenu(ctx context.Context, in *DeleteOftenMenuRequest, opts ...grpc.CallOption) (*DeleteOftenMenuResponse, error)
	GetHavingFind(ctx context.Context, in *GetHavingFindRequest, opts ...grpc.CallOption) (*GetHavingFindResponse, error)
	GetMenuDate(ctx context.Context, in *GetMenuDateRequest, opts ...grpc.CallOption) (*GetMenuDateResponse, error)
	DeleteMenuToday(ctx context.Context, in *DeleteMenuTodayRequest, opts ...grpc.CallOption) (*DeleteMenuTodayResponse, error)
}

type menuClient struct {
	cc grpc.ClientConnInterface
}

func NewMenuClient(cc grpc.ClientConnInterface) MenuClient {
	return &menuClient{cc}
}

func (c *menuClient) CreateMenu(ctx context.Context, in *CreateMenuRequest, opts ...grpc.CallOption) (*CreateMenuResponse, error) {
	out := new(CreateMenuResponse)
	err := c.cc.Invoke(ctx, "/user.menu/CreateMenu", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *menuClient) CreateOftenMenu(ctx context.Context, in *CreateOftenMenuRequest, opts ...grpc.CallOption) (*CreateOftenMenuResponse, error) {
	out := new(CreateOftenMenuResponse)
	err := c.cc.Invoke(ctx, "/user.menu/CreateOftenMenu", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *menuClient) DeleteMenu(ctx context.Context, in *DeleteMenuRequest, opts ...grpc.CallOption) (*DeleteMenuResponse, error) {
	out := new(DeleteMenuResponse)
	err := c.cc.Invoke(ctx, "/user.menu/DeleteMenu", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *menuClient) DeleteOftenMenu(ctx context.Context, in *DeleteOftenMenuRequest, opts ...grpc.CallOption) (*DeleteOftenMenuResponse, error) {
	out := new(DeleteOftenMenuResponse)
	err := c.cc.Invoke(ctx, "/user.menu/DeleteOftenMenu", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *menuClient) GetHavingFind(ctx context.Context, in *GetHavingFindRequest, opts ...grpc.CallOption) (*GetHavingFindResponse, error) {
	out := new(GetHavingFindResponse)
	err := c.cc.Invoke(ctx, "/user.menu/GetHavingFind", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *menuClient) GetMenuDate(ctx context.Context, in *GetMenuDateRequest, opts ...grpc.CallOption) (*GetMenuDateResponse, error) {
	out := new(GetMenuDateResponse)
	err := c.cc.Invoke(ctx, "/user.menu/GetMenuDate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *menuClient) DeleteMenuToday(ctx context.Context, in *DeleteMenuTodayRequest, opts ...grpc.CallOption) (*DeleteMenuTodayResponse, error) {
	out := new(DeleteMenuTodayResponse)
	err := c.cc.Invoke(ctx, "/user.menu/DeleteMenuToday", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// MenuServer is the server API for Menu service.
type MenuServer interface {
	CreateMenu(context.Context, *CreateMenuRequest) (*CreateMenuResponse, error)
	CreateOftenMenu(context.Context, *CreateOftenMenuRequest) (*CreateOftenMenuResponse, error)
	DeleteMenu(context.Context, *DeleteMenuRequest) (*DeleteMenuResponse, error)
	DeleteOftenMenu(context.Context, *DeleteOftenMenuRequest) (*DeleteOftenMenuResponse, error)
	GetHavingFind(context.Context, *GetHavingFindRequest) (*GetHavingFindResponse, error)
	GetMenuDate(context.Context, *GetMenuDateRequest) (*GetMenuDateResponse, error)
	DeleteMenuToday(context.Context, *DeleteMenuTodayRequest) (*DeleteMenuTodayResponse, error)
}

// UnimplementedMenuServer can be embedded to have forward compatible implementations.
type UnimplementedMenuServer struct {
}

func (*UnimplementedMenuServer) CreateMenu(context.Context, *CreateMenuRequest) (*CreateMenuResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateMenu not implemented")
}
func (*UnimplementedMenuServer) CreateOftenMenu(context.Context, *CreateOftenMenuRequest) (*CreateOftenMenuResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateOftenMenu not implemented")
}
func (*UnimplementedMenuServer) DeleteMenu(context.Context, *DeleteMenuRequest) (*DeleteMenuResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMenu not implemented")
}
func (*UnimplementedMenuServer) DeleteOftenMenu(context.Context, *DeleteOftenMenuRequest) (*DeleteOftenMenuResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteOftenMenu not implemented")
}
func (*UnimplementedMenuServer) GetHavingFind(context.Context, *GetHavingFindRequest) (*GetHavingFindResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetHavingFind not implemented")
}
func (*UnimplementedMenuServer) GetMenuDate(context.Context, *GetMenuDateRequest) (*GetMenuDateResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetMenuDate not implemented")
}
func (*UnimplementedMenuServer) DeleteMenuToday(context.Context, *DeleteMenuTodayRequest) (*DeleteMenuTodayResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteMenuToday not implemented")
}

func RegisterMenuServer(s *grpc.Server, srv MenuServer) {
	s.RegisterService(&_Menu_serviceDesc, srv)
}

func _Menu_CreateMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateMenuRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServer).CreateMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.menu/CreateMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServer).CreateMenu(ctx, req.(*CreateMenuRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Menu_CreateOftenMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateOftenMenuRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServer).CreateOftenMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.menu/CreateOftenMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServer).CreateOftenMenu(ctx, req.(*CreateOftenMenuRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Menu_DeleteMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMenuRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServer).DeleteMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.menu/DeleteMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServer).DeleteMenu(ctx, req.(*DeleteMenuRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Menu_DeleteOftenMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteOftenMenuRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServer).DeleteOftenMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.menu/DeleteOftenMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServer).DeleteOftenMenu(ctx, req.(*DeleteOftenMenuRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Menu_GetHavingFind_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHavingFindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServer).GetHavingFind(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.menu/GetHavingFind",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServer).GetHavingFind(ctx, req.(*GetHavingFindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Menu_GetMenuDate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMenuDateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServer).GetMenuDate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.menu/GetMenuDate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServer).GetMenuDate(ctx, req.(*GetMenuDateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Menu_DeleteMenuToday_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteMenuTodayRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MenuServer).DeleteMenuToday(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/user.menu/DeleteMenuToday",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MenuServer).DeleteMenuToday(ctx, req.(*DeleteMenuTodayRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Menu_serviceDesc = grpc.ServiceDesc{
	ServiceName: "user.menu",
	HandlerType: (*MenuServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateMenu",
			Handler:    _Menu_CreateMenu_Handler,
		},
		{
			MethodName: "CreateOftenMenu",
			Handler:    _Menu_CreateOftenMenu_Handler,
		},
		{
			MethodName: "DeleteMenu",
			Handler:    _Menu_DeleteMenu_Handler,
		},
		{
			MethodName: "DeleteOftenMenu",
			Handler:    _Menu_DeleteOftenMenu_Handler,
		},
		{
			MethodName: "GetHavingFind",
			Handler:    _Menu_GetHavingFind_Handler,
		},
		{
			MethodName: "GetMenuDate",
			Handler:    _Menu_GetMenuDate_Handler,
		},
		{
			MethodName: "DeleteMenuToday",
			Handler:    _Menu_DeleteMenuToday_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "menu.proto",
}
